{ 
    "_id" : ObjectId("5cd01b959f3d58286819063f"), 
    "content" : "<p>const express=require('express');</p> <p>var server=express();</p> <p>//cookie</p> <p>server.use('/',function (req,res)   {</p> <p>    res.cookie('user','blue',{path:'/aaa',maxAge:30*24*3600*1000});</p> <p>    res.send('ok');</p> <p>})</p> <p></p> <p>server.listen(8080);</p>", 
    "id" : "1", 
    "title" : "面试官的陷阱:\"你的期望薪资是多少？\"", 
    "DArticle" : "亲爱的小伙伴们，想必各位或多或少都经历过谈薪的阶段，当HR问：你期望的薪资是多少？说低了总觉得委屈自己，说高了又怕offer不保，好不容易在前面几轮面试积攒的自信，在这个问题上就变成“emm差不多就行吧”然后面试一结束就开始无限后悔……<br />                       怎么巧妙回答薪资问题？  <br />                     怎么保证自己的利益最大化？  <br />                     怎么把“白菜价”开成“翡翠价”？  <br />                     来听听我今天的讲解吧 <br />                     <img src=\"../../../public/images/a1.jpg\" className=\"img1\" /> <br />                     HR为什么问？  <br />                     要想回答好这个问题，就得先弄清企业提问的目的：  <br />                     一、了解你的期望薪资是否在公司的薪酬体系范围内  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;如果是体量大的企业确实会有一套薪酬体系，每一种岗位都有薪资范围，但小伙伴们会想，为什么企业不直接确定薪资，问我接不接受就可以了。这里涉及到人力资源中的“员工薪酬满意度”问题。  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;假设一下，某企业的薪资范围是7-8k，你说出的期望是8.5k，8k你也能接受，但并不满意，这样肯定会影响你工作中的情绪，所以企业要么就不用你，要用就满足你的8.5K需求。<br />                     <img src=\"../../../public/images/a2.jpg\" className=\"img1\" /> <br />                     二、摄想了解你在原有的薪资基础上想提升多少  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;在问你期望薪资之前HR一定会问你目前薪资，现在这个目前薪资你还得如实回答，因为现在稍微重要的岗位在offer之后，入职之前都要做背调的，HR问你期望薪资也是想了解在你目前的薪资基础上，你想提升多少，一般来说提升30%左右算比较正常的，如果你不想提升，企业也会认为有问题，不差钱就有其它目的，其它目的可能对企业来说比你想赚钱更不好满足。<br />                       三、想了解你对自我价值的判定  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;你有明确的薪资要求，说明你对自己的价值有明确的判定，如果你的期望比目前薪资高出很多，比如翻倍， 那么HR也希望听你说一下原因，看看你的逻辑是否清晰，你的能力能给企业带来什么价值，是否值得企业开出这份薪资。<br />                     <img src=\"../../../public/images/a3.png\" className=\"img1\" /> <br />                     求职者怎么回答<br />                     一、了解自己的市场价值  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;每项工作都有一般市场价值，在回答薪资问题之前，先查找薪资数据，了解求职岗位以及自身经验、技能水平可以拿到的薪资范围。  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;这几个网站可以为我们提供工资信息：  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;■ www.salary.com    ■ www.glassdoor.com/Salaries<br />                     &nbsp;&nbsp;&nbsp;&nbsp;■ Indeed/salaries      ■ LinkedIn/salary  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;■ Payscale.com  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;另外，还有公众号邦圈职的邦你查功能，可以为我们提供该岗位的就业数据以及薪资等。同时，将自己的期望待遇列举出来，包括基本工作，最重视的好处，或是某些特别的兴趣。<br />                     二、事先做功课，了解目标公司  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;在美国，只有不到15％的公司会在职位发布信息中注明薪资范围，在申请岗位前，可以先做市场调查，从官网或者前雇员的评价，来了解自己的求职岗位在目标公司中的地位，以及培训机会、成长空间等，再是福利待遇。  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;除了薪水，我们还可以看公司是否提供以下的福利，包括：<br />                     <img src=\"../../../public/images/a5.png\" className=\"img1\" /> <br />                     值得一提的是，工作的位置很重要！同一个公司及岗位，工资可能会根据工作地点大幅度变化，需要关注地域因素。  <br />                     三、自我定位和公司定位  <br />                     &nbsp;&nbsp;&nbsp;&nbsp;你需要了解到，公司对你或者说这个岗位的人的定位是什么？有没有什么计划，未来3年有什么目标，需要达成什么结果，这个岗位的人向谁汇报工作等这些问题。这些问题涉及到你个人在这家公司的成长问题，有可能也将决定你未来是否偏向技术型人才还是管理型人才。如果这些问题没有了解清楚，如何给自己的薪资报价?  <br />                     详细询问这些问题后，你再报出期望薪资都不迟。                     <div className=\"like\">                         <i className=\"iconfont icon-xin\" ></i>&nbsp;&nbsp;喜欢&nbsp;&nbsp;|&nbsp;&nbsp;376                     </div>                     <div className=\"talk\">                         <p>您的评论</p>                         <textarea col=\"80\" rows=\"6\" className=\"pl\"></textarea>                         <button className=\"sub\">提交</button>                     </div>", 
    "DName" : "阿德邦HRSaaS", 
    "Ddet" : "2019.03.21&nbsp;&nbsp;字数&nbsp;14330&nbsp;&nbsp;阅读&nbsp;7853&nbsp;&nbsp;评论&nbsp;863&nbsp;&nbsp;喜欢&nbsp;87682"
}
{ 
    "_id" : ObjectId("5cd01c44fff8004970e2cf1a"), 
    "title" : "https", 
    "content" : "<p>1.http是明文协议</p> <p>传递的数据容易被偷窥和篡改</p> <p>对称加密(加密规则和解密规则一样)</p> <p>2.密钥的传递问题</p> <p>非对称加密</p> <p>密钥分为两个</p> <p>公钥和私钥(举个例子，真正的算法不是这样)rsa算法</p> <p>数学基础是两个超大素数求乘积</p> <p>4654*165413123(私钥) 私钥数据只能用公钥解密</p> <p>但是分解因子非常麻烦</p> <p>769832674442(公钥) 公钥数据只能用私钥解密</p> <p>3.非对称加密特别慢</p> <p>第一次先用非对称加密传输密钥</p> <p>然后用对称算法加密数据 </p>", 
    "id" : "2", 
    "__v" : NumberInt(0)
}
{ 
    "_id" : ObjectId("5cd01d46ba06264b1c592bbb"), 
    "title" : "nginx", 
    "content" : "<p>1停止防火墙</p> <p>systemctl stop firewalld.service</p> <p>2</p> <p>setenforce 0</p> <p>3依赖模块</p> <p>yum -y install gcc gcc-c++ autoconf pcre pcre-devel make automake</p> <p>yum -y install wget httpd-tools vim</p> <p>4安装nginx</p> <p>http://nginx.org/en/linux_packages.html#RHEL-CentOS</p> <p>vim /etc/yum.repos.d/nginx.repo</p> <p>[nginx]</p> <p>name=nginx repo</p> <p>baseurl=http://nginx.org/packages/centos/7/$basearch/</p> <p>gpgcheck=0</p> <p>enabled=1</p> <p></p> <p>yum install nginx</p> <p>修改default.conf的server_name localhost www.yangqq</p> <p>可以映射</p> <p>https配置</p> <p>https://help.aliyun.com/knowledge_detail/95491.html?spm=5176.2020520154.cas.25.355656a7j0NKaK</p> <p>添加内容到nginx.conf的server中</p>", 
    "id" : "3", 
    "__v" : NumberInt(0)
}
{ 
    "_id" : ObjectId("5cd0284bca0927409c20c999"), 
    "title" : "跨域方式", 
    "content" : "jsonp cors postMessage window.name hash window.domain websocket nginx配置", 
    "id" : "4", 
    "__v" : NumberInt(0)
}
{ 
    "_id" : ObjectId("5cd0c658b4b679203c32a170"), 
    "title" : "bfc", 
    "content" : "<p>https://www.bilibili.com/video/av46317897?from=search&seid=12032765134805631088</p> <p>bfc block formatting context</p> <p>    块级格式化上下文</p> <p>bfc的目的</p> <p>形成一个完全独立的空间，让空间中的子元素不会影响到外面的布局</p> <p>触发bfc</p> <p>    float不为none</p> <p>    position不为relative和static</p> <p>    overflow为auto scroll和hidden</p> <p>    display为table-cell或inline-block</p> <p>解决的问题</p> <p>解决浮动元素令父元素高度塌陷的问题</p> <p>    页面中有一个父元素和几个子元素</p> <p>    这几个子元素都为浮动时</p> <p>    父元素高度坍塌</p> <p>    因为浮动的子元素脱离了文档流</p> <p>    被提起来形成新的队列</p> <p>    下方普通队列中的元素无法触及</p> <p>    父元素检测不到它的存在无法被撑开</p> <p>    形成父元素高度坍塌</p> <p>    可以给父元素设置</p> <p>    overflow:hidden;</p> <p>    display:table-cell;</p> <p>    display: block;</p> <p>    position:fixed;</p> <p>    position:absolute;</p> <p>    触发了bfc的容器就是页面上一个完全隔离开的容器</p> <p>    容器的子元素不会影响外面的元素</p> <p>    触发了bfc的父元素在计算高度时</p> <p>    不得不让浮动的子元素参与进来</p> <p>解决高度坍塌的问题</p> <p>    父元素也浮动起来</p> <p>        优点:代码量极少</p> <p>        缺点：影响之后的元素排列</p> <p>    给父元素添加一个固定高度(只适用于已知子元素高度的情况)</p> <p>        优点:没有学习成本</p> <p>        缺点:不灵活，难以维护</p> <p>    在浮动的子元素后面添加一个空元素</p> <p>    设置{clear:both}清除浮动</p> <p>        优点:简单易懂</p> <p>        缺点:增加无意义标签，不利于以后维护</p> <p>    为浮动的最后一个子元素设置伪元素::after{clear:both}</p> <p>        优点:结构和语义完全正确</p> <p>        缺点:复用不当导致代码量增加</p> <p>解决自适应布局的问题</p> <p>    两栏布局(左侧定宽，右侧自适应)</p> <p>    float:left;   margin-right: 200px;</p> <p>    width:200px;</p> <p>解决外边距垂直方向重合问题</p> <p>    垂直方向margin重合</p> <p>    p(margin-bottom:20px)</p> <p>    <div style=\"overflow:hidden\"></p> <p>    p(margin-top:30px)</p> <p>    </div></p> <p>    为其中一个p元素的外面包裹一层父元素</p> <p>    并且触发父元素bfc如{overflow:hidden}</p> <p>    </p>", 
    "id" : "5", 
    "__v" : NumberInt(0)
}
